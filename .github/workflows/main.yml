name: CI/CD Pipeline for Python App

# This workflow is triggered on every push to the main branch
on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Build the Docker image
      - name: Build Docker Image
        env:
          DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/devops
          DOCKER_TAG: ${{ github.sha }}
        run: docker build -t $DOCKER_IMAGE:$DOCKER_TAG .

      # Step 5: Run a vulnerability scan on the image
      - name: Scan Docker Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/devops:${{ github.sha }}
          format: 'table'
          exit-code: '0' 
          severity: 'HIGH,CRITICAL'

      # Step 6: Tag and push the images
      - name: Push Docker Images
        env:
          DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/devops
          DOCKER_TAG: ${{ github.sha }}
        run: |
          # Push to GitHub Container Registry
          docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_IMAGE:latest
          docker push $DOCKER_IMAGE:$DOCKER_TAG
          docker push $DOCKER_IMAGE:latest
          # Push to Docker Hub
          docker tag $DOCKER_IMAGE:$DOCKER_TAG ${{ secrets.DOCKERHUB_USERNAME }}/devops:${{ github.sha }}
          docker tag $DOCKER_IMAGE:$DOCKER_TAG ${{ secrets.DOCKERHUB_USERNAME }}/devops:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/devops:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/devops:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      # Step 1: Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 2: Pull and run the latest Docker image
      - name: Pull and Run Docker Image
        env:
          DOCKERHUB_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/devops:latest
        run: |
          docker pull $DOCKERHUB_IMAGE
          docker run --rm $DOCKERHUB_IMAGE
