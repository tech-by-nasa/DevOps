name: CI/CD Pipeline for Python App

# This workflow is triggered on every push to the main branch
on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub's Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Build the Docker image
      - name: Build Docker Image
        env:
          DOCKER_IMAGE: ghcr.io/tech-by-nasa/devops
          DOCKER_TAG: ${{ github.sha }}
        run: docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} .

      # Step 4: Run a vulnerability scan on the image
      - name: Scan Docker Image
        env:
          DOCKER_IMAGE: ghcr.io/tech-by-nasa/devops
          DOCKER_TAG: ${{ github.sha }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      # Step 5: Tag and push the images
      - name: Push Docker Images
        env:
          DOCKER_IMAGE: ghcr.io/tech-by-nasa/devops
          DOCKER_TAG: ${{ github.sha }}
        run: |
          docker tag ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} ${{ env.DOCKER_IMAGE }}:latest
          docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          docker push ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_deploy
    
    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Authenticate with Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: my-service-account@my-project.iam.gserviceaccount.com
          
      # Step 3: Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          
      # Step 4: Deploy to Cloud Run
      - name: Deploy to Cloud Run
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: 'python-app'
          image: 'ghcr.io/tech-by-nasa/devops:latest'
          region: 'us-central1'
          project_id: ${{ secrets.GCP_PROJECT_ID }}