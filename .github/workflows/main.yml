name: CI/CD Pipeline for Python App

# This workflow is triggered on every push to the main branch
on:
  push:
    branches:
      - main

# Define environment variables to be used in the workflow
env:
  DOCKER_IMAGE: nagasarath/python-app
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub using stored secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Build the Docker image
      - name: Build Docker Image
        run: docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} .

      # Step 4: Scan the Docker Image for Vulnerabilities
      - name: Scan Image for Vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          format: "table"
          exit-code: "0"

      # Step 5: Tag and push the image to Docker Hub
      - name: Push Docker Image
        run: |
          docker tag ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} ${{ env.DOCKER_IMAGE }}:latest
          docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          docker push ${{ env.DOCKER_IMAGE }}:latest

      # Step 6: Install kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      # Step 7: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          # Use the KUBE_CONFIG secret to authenticate kubectl
          mkdir -p ~/.kube
          printf "%s" "${{ secrets.KUBE_CONFIG }}"| base64 -d > ~/.kube/config
          
          # Replace the image placeholder with the correct image and tag
          sed -i 's|your-dockerhub-username|'${{ secrets.DOCKERHUB_USERNAME }}'|g' kubernetes/deployment.yaml
          
          # Apply the Kubernetes manifests
          kubectl apply --kubeconfig ~/.kube/config -f kubernetes/deployment.yaml
          kubectl apply --kubeconfig ~/.kube/config -f kubernetes/service.yaml
